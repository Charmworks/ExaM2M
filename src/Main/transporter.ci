// *****************************************************************************
/*!
  \file      src/Main/transporter.ci
  \copyright 2020 Charmworks, Inc.
             All rights reserved. See the LICENSE file for details.
  \brief     Charm++ module interface file for Transporter
  \details   Charm++ module interface file for Transporter
*/
// *****************************************************************************

module transporter {

  extern module worker;

  include "collidecharm.h";

  namespace exam2m {

    chare [migratable] Transporter {
      entry Transporter();
      entry void addMesh( const std::string& mesh );
      entry [reductiontarget] void load( std::size_t meshid, std::size_t nelem );
      entry [reductiontarget] void distributed( std::size_t meshid );
      entry [reductiontarget] void mapinserted( std::size_t meshid, std::size_t error );
      entry [reductiontarget] void queried( std::size_t meshid );
      entry [reductiontarget] void responded( std::size_t meshid );
      entry [reductiontarget] void workinserted( std::size_t meshid );
      entry [reductiontarget] void workcreated( std::size_t meshid );
      entry [reductiontarget] void written();
      entry void processCollisions( int nColls, Collision colls[nColls] );
    }

  } // exam2m::

}
